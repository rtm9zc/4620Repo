/*A sorted linked list that implements a mindlessly simple comparable interface*/
class TheClass{
    void main(){ //here because a main function is required, doesn't do much
    	 LinkedList theList = New(LinkedList);
	 return;
    }
}

interface Comparable{
     int compare(int a, int b);   
}

class LinkedList implements Comparable{
      int length;
      ListNode head;
      void insert(ListNode n){
      	   ListNode current = head;
	   if (current == Null){
	      this.head = current;
	      this.length = 1;
	      return;
	   }
	   if (compare(current.value, n.value) == -1){
	      n.next = current;
	      this.head = n;
	      this.length = this.length + 1;
	      return;
	   }
	   while(True){
		if(compare(current.value, n.value) == -1){
		     if (current.next == Null){
		     	current.next = n;
			this.length = this.length + 1;
			return;
		     }
		     current = current.next;
		}
	   }
      }
      int compare(int a, int b){ //not useful in this context, but let's pretend
      	  if(a > b){
	       return -1;
	  }
	  else if(b > a){
	       return 1;
	  }
	  else{
	       return 0;
	  }
      }
}

class ListNode{
      int value;
      ListNode next;
}